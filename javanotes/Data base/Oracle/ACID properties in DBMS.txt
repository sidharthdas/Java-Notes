ACID properties in DBMS
-------------------------------

To ensure the integrity of data during a transaction (A transaction is a unit of program that 
updates various data items, read more about it here), the database system maintains the following properties. 
These properties are widely known as ACID properties:

Atomicity: This property ensures that either all the operations of a transaction reflect in database or none. 
Let’s take an example of banking system to understand this: Suppose Account A has a balance of 400$ & B has 700$. 
Account A is transferring 100$ to Account B. This is a transaction that has two operations a) Debiting 100$ from
 A’s balance b) Creating 100$ to B’s balance. Let’s say first operation passed successfully while second failed, 
 in this case A’s balance would be 300$ while B would be having 700$ instead of 800$. This is unacceptable in a 
 banking system. Either the transaction should fail without executing any of the operation or it should process 
 both the operations. The Atomicity property ensures that.
 
Consistency: To preserve the consistency of database, the execution of transaction should take place in isolation
 (that means no other transaction should run concurrently when there is a transaction already running). 
 For example account A is having a balance of 400$ and it is transferring 100$ to account B & C both. 
 So we have two transactions here. Let’s say these transactions run concurrently and both the transactions 
 read 400$ balance, in that case the final balance of A would be 300$ instead of 200$. This is wrong. 
 If the transaction were to run in isolation then the second transaction would have read the correct 
 balance 300$ (before debiting 100$) once the first transaction went successful.
 
Isolation: For every pair of transactions, one transaction should start execution only when the other finished execution.
 
Durability: Once a transaction completes successfully, the changes it has made into the database should be permanent
 even if there is a system failure. The recovery-management component of database systems ensures the durability of transaction.