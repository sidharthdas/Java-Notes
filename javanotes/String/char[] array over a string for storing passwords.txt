Why to use char[] array over a string for storing passwords in Java?

==> Why char Array is preferred over String in storing passwords?

One of the main reason to prefer char Array over String is security risk of stealing passwords. Since String are reusable
 in the constant pool , there are high chances that they remain in the memory for the long duration. 
Anyone who has access to the memory dump can find the password in clear text.
That's why password should be encrypted.

==> What is Character encoding? Explain the difference between UTF-16 and UTF-8?

When you want to represent Character using bytes, character encoding is used.

The UTF-16 uses 2 bytes or 16 bits to represent a character while UTF-8 uses 1 byte or 8 bits to represent a character.

Strings are immutable:  Strings are immutable in Java and therefore if a password is stored as plain text it will be 
available in memory until Garbage collector clears it and as Strings are used in String pool for re-usability there 
are high chances that it will remain in memory for long duration, which is a security threat. Strings are immutable 
and there is no way that the content of Strings can be changed because any change will produce new String.

With an array, the data can be wiped explicitly data after its work is complete. The array can be overwritten and and 
the password won’t be present anywhere in the system, even before garbage collection.

Security: Any one who has access to memory dump can find the password in clear text and that’s another reason to
 use encrypted password than plain text.  So Storing password in character array clearly mitigates security risk of stealing password.
 
Log file safety: With an array, one can explicitly wipe the data , overwrite the array and the password 
won’t be present anywhere in the system.
With plain String, there are much higher chances of accidentally printing the password to logs, monitors or 
some other insecure place. char[] is less vulnerable.

//Java program to illustate prefering char[] arrays  
//over strings for passwords in Java 
public class PasswordPreference 
{ 
   
    public static void main(String[] args)  
    { 
   
        String strPwd = "password"; 
        char[] charPwd = new char[] {'p','a','s','s','w','o','r','d'}; 
          
        System.out.println("String password: " + strPwd ); 
        System.out.println("Character password: " + charPwd ); 
    } 
} 
Output:

String password: password
Character password: [C@15db9742