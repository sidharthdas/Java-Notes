1.> Binary Tree : In a binary tree, each node can have a maximum of 2 child nodes, and there is no ordering in terms of how the 
nodes are organized in the binary tree. Nodes that do not have any child nodes are called leaf nodes of the binary tree. Eg :


2.> Binary Search Tree : Binary Search Tree is essentially a binary tree, in terms of how many child nodes a node in the binary 
search tree can possibly have, but there is one important difference between a binary tree and a binary search tree : 
In a binary search tree there is a relative ordering in how the nodes are organized, while there is nothing of that sort in a binary tree. 
In Binary search tree, all the nodes to the left of a node have values less the value of the node, and all the nodes to the right of a node 
have values greater than the value of the node.


So, in a binary search tree we can efficiently perform operation which rely on orderly organization of nodes,
 as compared to the binary tree. Examples of such operations are : find minimum / maximum value in the tree, find all
 values greater / lesser than a particular value from the tree, traverse the tree from the least value to the max value, etc. 
 Performing such operations on plain binary tree wont be very efficient.